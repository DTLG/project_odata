// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'core/objectbox/objectbox_entities.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 5898118630066854859),
    name: 'AgentObx',
    lastPropertyId: const obx_int.IdUid(6, 7665778656174601592),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4704428088401841038),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 55309919668388127),
        name: 'guid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(1, 9044729206033351486),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 9042861342207890580),
        name: 'name',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(2, 3528394521640951301),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5237705026597490010),
        name: 'parentGuid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(3, 7835339345921462655),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7025530956792787158),
        name: 'isFolder',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7665778656174601592),
        name: 'password',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 8763961766103358067),
    name: 'BarcodeObx',
    lastPropertyId: const obx_int.IdUid(3, 7181883927762615919),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2747850063299170559),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8667847544992394923),
        name: 'nomGuid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(4, 3914527378597271359),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7181883927762615919),
        name: 'barcode',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(5, 6044711527750669641),
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 4284781867969496941),
    name: 'KontragentObx',
    lastPropertyId: const obx_int.IdUid(6, 3482542380234335907),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4516984577973605844),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3972222023123772771),
        name: 'guid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(6, 7754426359316133107),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 1404109737866777868),
        name: 'name',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(7, 5951743703731631314),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5570160614082803962),
        name: 'parentGuid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(8, 6411133136916522047),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7482667671921039159),
        name: 'isFolder',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3482542380234335907),
        name: 'edrpou',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(4, 536119716697023923),
    name: 'NomenclatureObx',
    lastPropertyId: const obx_int.IdUid(12, 4408787451333387180),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7427406023386492628),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1036922700222593615),
        name: 'guid',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(9, 8463687708553181361),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2298803427903020196),
        name: 'name',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(10, 2605300365745605649),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7952379228449623846),
        name: 'article',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(11, 7563508736041554628),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4596164492951387564),
        name: 'parentGuid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(12, 7936582621768388147),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3946227889482325608),
        name: 'isFolder',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6266119089310960907),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 9032907066856355893),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2172629460557503015),
        name: 'unitName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6131508966924211379),
        name: 'unitGuid',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 693481487439846856),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 4408787451333387180),
        name: 'createdAtMs',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(5, 487477669029294282),
    name: 'PriceObx',
    lastPropertyId: const obx_int.IdUid(4, 8648620238990712626),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8957816583350619946),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3992340748794860742),
        name: 'nomGuid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(13, 8032944488838013670),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3249115006018676200),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8648620238990712626),
        name: 'createdAtMs',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(6, 5024853998477648590),
    name: 'TypeOfRepairObx',
    lastPropertyId: const obx_int.IdUid(4, 1734106670235115181),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4070024810800595502),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5331034662812321809),
        name: 'guid',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(14, 6298623785525240009),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7667178104731533629),
        name: 'name',
        type: 9,
        flags: 2048,
        indexId: const obx_int.IdUid(15, 7774220761926017667),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1734106670235115181),
        name: 'createdAtMs',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(6, 5024853998477648590),
    lastIndexId: const obx_int.IdUid(15, 7774220761926017667),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [],
    retiredIndexUids: const [],
    retiredPropertyUids: const [],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    AgentObx: obx_int.EntityDefinition<AgentObx>(
      model: _entities[0],
      toOneRelations: (AgentObx object) => [],
      toManyRelations: (AgentObx object) => {},
      getId: (AgentObx object) => object.obxId,
      setId: (AgentObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (AgentObx object, fb.Builder fbb) {
        final guidOffset = fbb.writeString(object.guid);
        final nameOffset = fbb.writeString(object.name);
        final parentGuidOffset = fbb.writeString(object.parentGuid);
        fbb.startTable(7);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, guidOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, parentGuidOffset);
        fbb.addBool(4, object.isFolder);
        fbb.addInt64(5, object.password);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final guidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final parentGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final isFolderParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final passwordParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final object = AgentObx(
          obxId: obxIdParam,
          guid: guidParam,
          name: nameParam,
          parentGuid: parentGuidParam,
          isFolder: isFolderParam,
          password: passwordParam,
        );

        return object;
      },
    ),
    BarcodeObx: obx_int.EntityDefinition<BarcodeObx>(
      model: _entities[1],
      toOneRelations: (BarcodeObx object) => [],
      toManyRelations: (BarcodeObx object) => {},
      getId: (BarcodeObx object) => object.obxId,
      setId: (BarcodeObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (BarcodeObx object, fb.Builder fbb) {
        final nomGuidOffset = fbb.writeString(object.nomGuid);
        final barcodeOffset = fbb.writeString(object.barcode);
        fbb.startTable(4);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, nomGuidOffset);
        fbb.addOffset(2, barcodeOffset);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final nomGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final barcodeParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final object = BarcodeObx(
          obxId: obxIdParam,
          nomGuid: nomGuidParam,
          barcode: barcodeParam,
        );

        return object;
      },
    ),
    KontragentObx: obx_int.EntityDefinition<KontragentObx>(
      model: _entities[2],
      toOneRelations: (KontragentObx object) => [],
      toManyRelations: (KontragentObx object) => {},
      getId: (KontragentObx object) => object.obxId,
      setId: (KontragentObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (KontragentObx object, fb.Builder fbb) {
        final guidOffset = fbb.writeString(object.guid);
        final nameOffset = fbb.writeString(object.name);
        final parentGuidOffset = fbb.writeString(object.parentGuid);
        final edrpouOffset = object.edrpou == null
            ? null
            : fbb.writeString(object.edrpou!);
        fbb.startTable(7);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, guidOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, parentGuidOffset);
        fbb.addBool(4, object.isFolder);
        fbb.addOffset(5, edrpouOffset);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final guidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final parentGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final isFolderParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          12,
          false,
        );
        final edrpouParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final object = KontragentObx(
          obxId: obxIdParam,
          guid: guidParam,
          name: nameParam,
          parentGuid: parentGuidParam,
          isFolder: isFolderParam,
          edrpou: edrpouParam,
        );

        return object;
      },
    ),
    NomenclatureObx: obx_int.EntityDefinition<NomenclatureObx>(
      model: _entities[3],
      toOneRelations: (NomenclatureObx object) => [],
      toManyRelations: (NomenclatureObx object) => {},
      getId: (NomenclatureObx object) => object.obxId,
      setId: (NomenclatureObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (NomenclatureObx object, fb.Builder fbb) {
        final guidOffset = fbb.writeString(object.guid);
        final nameOffset = fbb.writeString(object.name);
        final articleOffset = fbb.writeString(object.article);
        final parentGuidOffset = fbb.writeString(object.parentGuid);
        final idOffset = fbb.writeString(object.id);
        final unitNameOffset = fbb.writeString(object.unitName);
        final unitGuidOffset = fbb.writeString(object.unitGuid);
        final descriptionOffset = fbb.writeString(object.description);
        fbb.startTable(13);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, guidOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, articleOffset);
        fbb.addOffset(4, parentGuidOffset);
        fbb.addBool(5, object.isFolder);
        fbb.addOffset(6, idOffset);
        fbb.addFloat64(7, object.price);
        fbb.addOffset(8, unitNameOffset);
        fbb.addOffset(9, unitGuidOffset);
        fbb.addOffset(10, descriptionOffset);
        fbb.addInt64(11, object.createdAtMs);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final guidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final articleParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final parentGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 12, '');
        final isFolderParam = const fb.BoolReader().vTableGet(
          buffer,
          rootOffset,
          14,
          false,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 16, '');
        final priceParam = const fb.Float64Reader().vTableGet(
          buffer,
          rootOffset,
          18,
          0,
        );
        final unitNameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 20, '');
        final unitGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 22, '');
        final descriptionParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 24, '');
        final createdAtMsParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          26,
          0,
        );
        final object = NomenclatureObx(
          obxId: obxIdParam,
          guid: guidParam,
          name: nameParam,
          article: articleParam,
          parentGuid: parentGuidParam,
          isFolder: isFolderParam,
          id: idParam,
          price: priceParam,
          unitName: unitNameParam,
          unitGuid: unitGuidParam,
          description: descriptionParam,
          createdAtMs: createdAtMsParam,
        );

        return object;
      },
    ),
    PriceObx: obx_int.EntityDefinition<PriceObx>(
      model: _entities[4],
      toOneRelations: (PriceObx object) => [],
      toManyRelations: (PriceObx object) => {},
      getId: (PriceObx object) => object.obxId,
      setId: (PriceObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (PriceObx object, fb.Builder fbb) {
        final nomGuidOffset = fbb.writeString(object.nomGuid);
        fbb.startTable(5);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, nomGuidOffset);
        fbb.addFloat64(2, object.price);
        fbb.addInt64(3, object.createdAtMs);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final nomGuidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final priceParam = const fb.Float64Reader().vTableGet(
          buffer,
          rootOffset,
          8,
          0,
        );
        final createdAtMsParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = PriceObx(
          obxId: obxIdParam,
          nomGuid: nomGuidParam,
          price: priceParam,
          createdAtMs: createdAtMsParam,
        );

        return object;
      },
    ),
    TypeOfRepairObx: obx_int.EntityDefinition<TypeOfRepairObx>(
      model: _entities[5],
      toOneRelations: (TypeOfRepairObx object) => [],
      toManyRelations: (TypeOfRepairObx object) => {},
      getId: (TypeOfRepairObx object) => object.obxId,
      setId: (TypeOfRepairObx object, int id) {
        object.obxId = id;
      },
      objectToFB: (TypeOfRepairObx object, fb.Builder fbb) {
        final guidOffset = fbb.writeString(object.guid);
        final nameOffset = fbb.writeString(object.name);
        fbb.startTable(5);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, guidOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addInt64(3, object.createdAtMs);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final guidParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final createdAtMsParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = TypeOfRepairObx(
          obxId: obxIdParam,
          guid: guidParam,
          name: nameParam,
          createdAtMs: createdAtMsParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AgentObx] entity fields to define ObjectBox queries.
class AgentObx_ {
  /// See [AgentObx.obxId].
  static final obxId = obx.QueryIntegerProperty<AgentObx>(
    _entities[0].properties[0],
  );

  /// See [AgentObx.guid].
  static final guid = obx.QueryStringProperty<AgentObx>(
    _entities[0].properties[1],
  );

  /// See [AgentObx.name].
  static final name = obx.QueryStringProperty<AgentObx>(
    _entities[0].properties[2],
  );

  /// See [AgentObx.parentGuid].
  static final parentGuid = obx.QueryStringProperty<AgentObx>(
    _entities[0].properties[3],
  );

  /// See [AgentObx.isFolder].
  static final isFolder = obx.QueryBooleanProperty<AgentObx>(
    _entities[0].properties[4],
  );

  /// See [AgentObx.password].
  static final password = obx.QueryIntegerProperty<AgentObx>(
    _entities[0].properties[5],
  );
}

/// [BarcodeObx] entity fields to define ObjectBox queries.
class BarcodeObx_ {
  /// See [BarcodeObx.obxId].
  static final obxId = obx.QueryIntegerProperty<BarcodeObx>(
    _entities[1].properties[0],
  );

  /// See [BarcodeObx.nomGuid].
  static final nomGuid = obx.QueryStringProperty<BarcodeObx>(
    _entities[1].properties[1],
  );

  /// See [BarcodeObx.barcode].
  static final barcode = obx.QueryStringProperty<BarcodeObx>(
    _entities[1].properties[2],
  );
}

/// [KontragentObx] entity fields to define ObjectBox queries.
class KontragentObx_ {
  /// See [KontragentObx.obxId].
  static final obxId = obx.QueryIntegerProperty<KontragentObx>(
    _entities[2].properties[0],
  );

  /// See [KontragentObx.guid].
  static final guid = obx.QueryStringProperty<KontragentObx>(
    _entities[2].properties[1],
  );

  /// See [KontragentObx.name].
  static final name = obx.QueryStringProperty<KontragentObx>(
    _entities[2].properties[2],
  );

  /// See [KontragentObx.parentGuid].
  static final parentGuid = obx.QueryStringProperty<KontragentObx>(
    _entities[2].properties[3],
  );

  /// See [KontragentObx.isFolder].
  static final isFolder = obx.QueryBooleanProperty<KontragentObx>(
    _entities[2].properties[4],
  );

  /// See [KontragentObx.edrpou].
  static final edrpou = obx.QueryStringProperty<KontragentObx>(
    _entities[2].properties[5],
  );
}

/// [NomenclatureObx] entity fields to define ObjectBox queries.
class NomenclatureObx_ {
  /// See [NomenclatureObx.obxId].
  static final obxId = obx.QueryIntegerProperty<NomenclatureObx>(
    _entities[3].properties[0],
  );

  /// See [NomenclatureObx.guid].
  static final guid = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[1],
  );

  /// See [NomenclatureObx.name].
  static final name = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[2],
  );

  /// See [NomenclatureObx.article].
  static final article = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[3],
  );

  /// See [NomenclatureObx.parentGuid].
  static final parentGuid = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[4],
  );

  /// See [NomenclatureObx.isFolder].
  static final isFolder = obx.QueryBooleanProperty<NomenclatureObx>(
    _entities[3].properties[5],
  );

  /// See [NomenclatureObx.id].
  static final id = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[6],
  );

  /// See [NomenclatureObx.price].
  static final price = obx.QueryDoubleProperty<NomenclatureObx>(
    _entities[3].properties[7],
  );

  /// See [NomenclatureObx.unitName].
  static final unitName = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[8],
  );

  /// See [NomenclatureObx.unitGuid].
  static final unitGuid = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[9],
  );

  /// See [NomenclatureObx.description].
  static final description = obx.QueryStringProperty<NomenclatureObx>(
    _entities[3].properties[10],
  );

  /// See [NomenclatureObx.createdAtMs].
  static final createdAtMs = obx.QueryIntegerProperty<NomenclatureObx>(
    _entities[3].properties[11],
  );
}

/// [PriceObx] entity fields to define ObjectBox queries.
class PriceObx_ {
  /// See [PriceObx.obxId].
  static final obxId = obx.QueryIntegerProperty<PriceObx>(
    _entities[4].properties[0],
  );

  /// See [PriceObx.nomGuid].
  static final nomGuid = obx.QueryStringProperty<PriceObx>(
    _entities[4].properties[1],
  );

  /// See [PriceObx.price].
  static final price = obx.QueryDoubleProperty<PriceObx>(
    _entities[4].properties[2],
  );

  /// See [PriceObx.createdAtMs].
  static final createdAtMs = obx.QueryIntegerProperty<PriceObx>(
    _entities[4].properties[3],
  );
}

/// [TypeOfRepairObx] entity fields to define ObjectBox queries.
class TypeOfRepairObx_ {
  /// See [TypeOfRepairObx.obxId].
  static final obxId = obx.QueryIntegerProperty<TypeOfRepairObx>(
    _entities[5].properties[0],
  );

  /// See [TypeOfRepairObx.guid].
  static final guid = obx.QueryStringProperty<TypeOfRepairObx>(
    _entities[5].properties[1],
  );

  /// See [TypeOfRepairObx.name].
  static final name = obx.QueryStringProperty<TypeOfRepairObx>(
    _entities[5].properties[2],
  );

  /// See [TypeOfRepairObx.createdAtMs].
  static final createdAtMs = obx.QueryIntegerProperty<TypeOfRepairObx>(
    _entities[5].properties[3],
  );
}
